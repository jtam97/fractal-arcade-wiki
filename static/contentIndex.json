{"Games/MarvelRivals":{"title":"Marvel Rivals - In-depth look at portal mechanics","links":[],"tags":[],"content":"Marvel Rivals is a free-to-play team shooter, a Marvel version of Overwatch and one of my current favorite competitive games."},"Games/PathOfExile":{"title":"Path of Exile - Same Map, Different Experience","links":[],"tags":[],"content":"I’ve been playing Path of Exile for years now - countless leagues and countless more characters. I’ll give a basic rundown of the game, if you’re familiar you can skip to the algorithm section.\nGameplay\nPath of Exile is a loot-based action RPG with an insanely complex build and item system that makes each character a project in itself. The main thing I’m going to focus on here is the unique map procedural generation. From my perspective as a player, the campaign is pretty cool but the maps specifically are what make the game special.\nCampaign Maps\nThe level design of campaign maps and endgame maps are interesting and unique, and on repeat playthroughs, you can see the level design elements change slightly but are still familiar. In a way, this type of map caters to casual players and more hardcore “speed runners” - maps are never identical so it doesn’t feel stale, but the pathing is familiar enough that, once you’ve learned the map layout, you can move in a general direction and be confident you are going the right way.\nAlgorithm"},"Games/Portals":{"title":"Portal (2007) - A Spatial Illusion","links":["Games/MarvelRivals"],"tags":[],"content":"Portal, released by Valve in 2007, is a critically acclaimed puzzle game that’s a must-play for any puzzle game enthusiast.\nCore Mechanics\nPortal is a first-person puzzle game where the player must navigate through a series of puzzles using a portal gun. The portal gun can create two linked portals, an orange one and a blue one - when you enter one, you exit through the other. Two key mechanics make this particularly interesting:\n\nVisual Recursion - You can see through portals and into the other side. What makes this mind-bending is that you can see through portals recursively:\n\n\n\nMomentum Conservation - Objects maintain their velocity when passing through portals. This enables fascinating mechanics like the infinite fall:\n\n\nImplementation Approaches\nThis is an exercise I like to do when I’m learning about a new algorithm. I try to reason\nabout how I would implement it, and it really helps me understand the algorithm. Let’s explore how we might implement such a system. For clarity, let’s call the entrance portal “A” and the exit portal “B”.\nApproach 1: World Duplication\nThis idea was an initial knee jerk naive approach. One way that is probably overkill is to render the entire world twice - once on your side of portal A and another world for where portal B is. This is pretty lazy, but simple to code -\n1. Duplicate all assets in the world while maintaining positions of portal A and B\n2. Overlap portal A and portal B to connect the two worlds\n\nProblem: Extremely inefficient - you’re rendering the entire world twice and many assets are duplicated for no perspective benefit.\nApproach 2: Camera Centered at Other Portal\nAnother way that seems way better on hindsight is to set a camera centered at the other portal.\n1. Set a camera centered at the other portal\n2. Limit rendering the scene coming from the other camera to the portal area\n\nProblem: This is much more efficient without duplicating assets than Approach 1, but now you have the issue of adjusting the camera view through the other portal. If you don’t adjust the angle of the camera, it would just be one still picture which doesn’t look right.\nApproach for Portal Physics\nFor either of the above, how do we conserve momentum when going through the portal? I think it’s as simple as measuring the speed and angle in and duplicating the speed and angle out. The actual extra physics calculations (like gravity) can be done as soon as you are fully out of the portal without affecting trajectory much.\n1. Measure the speed and angle of entry at portal A\n2. Apply same speed and angle when exiting portal B\n3. Resume normal physics calculations after exit\n\nThe Solution: Stencil Buffer Rendering\nSo how do you render something like this graphically? The method they use is something called “stencil buffer portal rendering”. It is very similar to Approach 2, but adds a few steps to the rendering process. It is a concept very similar to looking through a mirror.\n1. Start with portal A and portal B.\n2. When looking at a portal, calculate the angle at which your view intersects the portal plane of portal A.\n3. Set the camera at the same distance and angle from portal B as from portal A. In the below diagram, you can see the red camera reflecting the same distance as the player.\n4. Limit rendering to portal B&#039;s visible area using stencil buffer.\n\n\nAn elegant and mathematically simple solution.\nModern Implementation\nWe’ve been talking about the game Portal, but what about the newest rendition of portals in Marvel Rivals? Here’s a quick look at the portal shenanigans in Marvel Rivals.\n\nFor a deeper dive into Marvel Rivals’ portal mechanics, check out my post on the topic."},"about":{"title":"About Me and the Fractal Arcade","links":[],"tags":[],"content":"A bit about me!\nI’m Justin, a software engineer, a CS/bioinformatics researcher, and a video game nerd! I love games but know little about what makes them tick, both in code and in enjoyment. So this is my exploration of unique algorithms and technical designs in games - sometimes beautiful, sometimes hacky, sometimes lazy - all fun! Honestly, it’s also a way for me to rave about my favorite games and what I find to be so special about them.\nThe Fractal Arcade\n\nWhere beautiful algorithms meet playful design\n\nThe name “Fractal Arcade”, at its root, was inspired by fractals and chaos theory, often associated with infinite procedural generation. Just like fractals, the controlled chaos and beauty in games can be found in the details.\nGames that inspired me to create Fractal Arcade:\n\nDark Souls\nPath of Exile\nBreath of the Wild\nMarvel Rivals\n"},"index":{"title":"Homepage","links":["About","games/PathOfExile","games/Portals","games/MarvelRivals"],"tags":[],"content":"Welcome to the Fractal Arcade Wiki! This is an exploration of unique algorithms and technical designs in games - sometimes beautiful, sometimes hacky, sometimes lazy - all fun!\n\nFeatured Articles\n\nAbout Me and the Fractal Arcade\nPath of Exile - Same Map, Different Experience - In Progress\nPortal (2007) - A Spatial Illusion\nMarvel Rivals - Or Portal 2.5 - In Progress\n"}}